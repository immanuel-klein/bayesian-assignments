---
title: "Assignment"
format: pdf
execute: 
  cache: true
editor: 
  markdown: 
    wrap: sentence
---

# General Information

-   **Points**: Assignment 4 comprises of 6 tasks, 2 points each (12 in total).
    2 points are obtained for complete and correct answers.
    1 point is obtained for a proper approach or if only part of the task is solved.

-   **Submission**: Hand in the assignment as a `Markdown` report ([RMarkdown](https://rmarkdown.rstudio.com/lesson-15.html) or [Quarto](https://rstudio.github.io/cheatsheets/html/quarto.html)) rendered as PDF.
    The PDF report should show the result(s), the code that produced the result(s), and possibly additional text or comment.
    Also indicate your name.
    The report should be uploaded on Moodle until Friday, July 5, 6 pm.

-   **Working in teams**: Everyone needs to hand in a report on Moodle.
    However, the report can be handed in as a team work (max. 2 people).
    When working in teams, state at the beginning of the document, who you worked with.
    It Ideally, teams use GitHub and add a link to the GitHub repository to which both contributed.

\newpage

# Additional remarks

## `ulam` and `Quarto`

Running MCMC with `ulam()` takes some time and produces many messages.
This can be annoying when you repeatedly render the `Quarto` document and the goal is to have a clean report.
Here are some tips to avoid long rendering times and an ugly document:

-   Write the ulam() model in a separate code chunk and give the chunk a name `{r name}`.In addition, specify the following settings at the top of the code chunk to avoid printing the MCMC progress messages of `ulam()` in the PDF document,

``` r
#| echo: true
#| eval: true
#| output: false

# data list and model
```

-   Set the [caching option](https://quarto.org/docs/computations/caching.html) `cache: true` in the YAML header at the start of the document.
    The first time the code chunk is rendered, its results are cached (stored) in the background.
    If you leave the code chunk untouched, the results are directly retrieved the next time you render the document.
    This avoids rerunning a model with every new rendering of the document.
    The chunk will only be newly evaluated if you actually change its code.
    To allow `Quarto` to recognize a code chunk, it needs a name.

-   If you could not not install the full `rethinking` package, solve the tasks with the `quap()` function instead of the `ulam()` function.
    However, if `ulam()` is available, make use of it.

## Data list and index variables

-   Provide `ulam()` a list of variables and values that you need for estimating the model rather than the entire data frame.
    `ulam()` works more reliable with lists.
    Moreover, while creating the list, you can also recode variables (e.g., from dummy values (0,1) or group names (male, female) to index values (1,2))

-   Using indices for group specific parameters such as in `y = a[G] + b[G]*X`, only works for integer values larger than 0, that is: `G = {1,2,3,...}`.
    When the variable values are names or include 0, you have to recode it first.
    Use the function `as.integer(variable)` if the variable is of type `factor` or `as.integer(as.factor(variable))` if the variable is of type `character`.
    Use `variable + 1` when the variable is dummy coded with 0 and 1 to get values 1 and 2.

\newpage

```{r packages}
#load packages here
library(dplyr)
library(tidyverse)
library(ggplot2)
library(tinytex)
library(rethinking)
library(rstan)
```

```{r data}
# load the data set 'heart.csv' here
heart <- read.csv("heart.csv")
```

# Task Set 1

## Task 1.1

Run a Bayesian logistic regression model to estimate the risk of men and women to develop a coronary heart disease (TenYearCHD).
Provide a summary of the posterior distributions.\
What is the average probability of men and women to develop the disease?

```{r m1}
#| echo: true
#| eval: true
#| output: false

# write data list and model here
heart.chd.gender <- na.omit(heart[, c("male", "TenYearCHD")])

model <- ulam(
  alist(
    TenYearCHD ~ dbinom(1, p),  
    logit(p) <- a + bm * male,  
    a ~ dnorm(0, 1.5), # Check standard deviations of a and bm      
    bm ~ dnorm(0, 0.5)          
  ), data = heart.chd.gender, chains = 4, cores = 4
)
```

```{r 1.1}
#write code here
#traceplot_ulam(model)
precis(model, depth = 2) 

samples <- extract.samples(model)
cat("Avg. probability of CHD for women:", inv_logit(mean(post$a)), "\n")
cat("Avg. probability of CHD for men:", inv_logit(mean(post$a + post$bm)), "\n")
```

# Task 1.2

For the model of `Task 1.1`, visualize the posterior distribution of gender-differences to assess the credibility of the gender difference.

```{r 1.2}
samples.df <- data.frame(
  Female = inv_logit(samples$a),
  Male = inv_logit(samples$a + samples$bm)) %>%
  pivot_longer(cols = c(Female, Male), names_to = "Gender", values_to = "Probability")

# Plot the posterior distributions
ggplot(samples.df, aes(x = Probability, fill = Gender)) +
  geom_density(alpha = 0.6) +
  labs(title = "Posterior of CHD Probability by Gender",
       x = "Prob. of CHD",
       y = "Density")
```

\newpage

# Task Set 2

## Task 2.1

Run a Bayesian logistic regression model to estimate the risk of men and women with and without diabetes to develop a coronary heart disease (TenYearCHD).
Provide a summary of the posterior distributions.
Does the effect of diabetes differ between men and women?

```{r m2}
#| echo: true
#| eval: true
#| output: false

# write data list and model here
```

```{r 2.1}
# write code here
```

# Task 2.2

For the model of `Task 2.1`, visualize the posterior distributions of each group in one plot to better assess the credibility of the group differences.

```{r 2.2}
# write code here
```

\newpage

# Task Set 3

## Task 3.1

Run a Bayesian logistic regression model to estimate the effect of age on the risk of developing a coronary heart disease (TenYearCHD), separately for women and men.
Ensure that the regression intercept represents the risk of women and men with average age.
Provide a summary of the posterior distributions.

```{r m3}
#| echo: true
#| eval: true
#| output: false

# write data list and model here
```

```{r 3.1}
# write code here
```

## Task 3.2

For the model of `Task 3.1`, visualize the posterior distribution of differences in the age effect between women and men.
Does age increase the risk of developing the disease and does this effect differ between women and men?

```{r 3.2}
# write code here
```
